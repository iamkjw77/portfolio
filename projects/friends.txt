1:"$Sreact.fragment"
2:I[2260,["26","static/chunks/26-aecbc5f3a16018a7.js","874","static/chunks/874-001c506437d97105.js","177","static/chunks/app/layout-e7fc5c7023036d95.js"],"default"]
3:I[2654,["26","static/chunks/26-aecbc5f3a16018a7.js","874","static/chunks/874-001c506437d97105.js","177","static/chunks/app/layout-e7fc5c7023036d95.js"],"default"]
4:I[7555,[],""]
5:I[1295,[],""]
6:I[9543,["345","static/chunks/app/not-found-fca05866b9a3aebf.js"],"default"]
8:I[9665,[],"OutletBoundary"]
b:I[9665,[],"ViewportBoundary"]
d:I[9665,[],"MetadataBoundary"]
f:I[6614,[],""]
:HL["/portfolio/_next/static/media/a34f9d1faa5f3315-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/portfolio/_next/static/css/3da72a897d73e42d.css","style"]
0:{"P":null,"b":"oUeKA_Dsw1H2yRtsDKuF6","p":"/portfolio","c":["","projects","friends"],"i":false,"f":[[["",{"children":["projects",{"children":[["id","friends","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/portfolio/_next/static/css/3da72a897d73e42d.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"ko","className":"scroll-smooth","children":["$","body",null,{"className":"__className_38a7f8","children":["$","$L2",null,{"children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L3",null,{}],["$","main",null,{"className":"flex-grow","children":["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$L6",null,{}],"$undefined",[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]}]}]}]]}],{"children":["projects",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["id","friends","d"],["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7","$undefined",null,["$","$L8",null,{"children":["$L9","$La",null]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","klGrSQzZ3w-KolyVllcua",{"children":[["$","$Lb",null,{"children":"$Lc"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$Ld",null,{"children":"$Le"}]]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:I[2484,["26","static/chunks/26-aecbc5f3a16018a7.js","692","static/chunks/692-85f0a8c4f69ae1ac.js","801","static/chunks/app/projects/%5Bid%5D/page-f1f5b7bde54b28c3.js"],"default"]
7:["$","div",null,{"className":"min-h-screen bg-white dark:bg-gray-900","children":["$","div",null,{"className":"container mx-auto px-4 py-20","children":["$","$L10",null,{"project":{"id":"friends","name":"친구하자","period":"2024.12 ~","description":"비슷한 관심사를 가진 사람들과 소통하고 친구를 추천받을 수 있는 실시간 채팅 및 커뮤니티 기반 웹 사이트","techStack":["React","TypeScript","Vite","React-query","Recoil","React-hook-form","Styled Components"],"link":"https://friends77.com","media":[{"type":"image","url":"","thumbnail":""}],"summary":["채팅 기능에서 아쉬운 점을 보완하고 개선하기 위해 해당 프로젝트에 참여","하나의 웹소켓으로 채팅방별 메시지 수신 핸들러를 효율적으로 처리하도록 설계","프론트엔드 팀장으로서 컨벤션 문서화와 팀 리딩을 맡아, 팀원들과 협력하여 프로젝트를 원활하게 진행"],"background":["이전에 채팅 기능을 구현한 경험이 있었지만, 비즈니스 로직과 UI 로직이 제대로 분리되지 않아 코드의 가독성과 유지보수성이 떨어지는 문제가 있었습니다. 이를 개선하기 위해 보다 효율적인 구조를 고민하게 되었고, 이를 실현하고자 채팅 관련 프로젝트에 참여하게 되었습니다."],"meaning":[{"title":"새로운 방식의 웹소켓 연결방식에 대한 고민","description":["이전 프로젝트에서는 채팅방 입장 시 웹소켓을 연결하고, 나가면 연결이 종료되는 구조였습니다. 하지만 이번 친구하자 프로젝트에서는 사이드바에서 참여한 채팅방 목록을 유지하면서, 각 채팅방의 새로운 메세지를 실시간으로 업데이트해야 했습니다. 이를 위해 입장한 채팅방과 참여한 채팅방의 메세지를 하나의 웹소켓에서 수신하는 방식을 채택했습니다.","이 과정에서 각 채팅방의 메세지를 적절히 구분하여 처리할 수 있도록, 웹소켓 메세지 이벤트가 발생할 때 구독된 모든 콜백 함수가 실행되는 구조를 설계했습니다. 이를 통해 입장한 채팅방과 참여 중인 채팅방의 메세지를 동시에 수신하고 처리할 수 있도록 구현했습니다."]},{"title":"실시간 알림 기능의 필요성 및 개선 방향","description":["웹소켓을 활용해 실시간 알림 기능을 구현했지만, 현재 알림이 필요한 상황은 친구 요청과 채팅방 초대 두 가지 뿐이었습니다. 참여한 채팅방의 메세지는 사이드바에서 실시간으로 업데이트되기 때문에 실시간 알림이 굳이 필요하지 않다는 생각이 들었습니다.","이에 따라 실시간 알림이 더 필요한 기능, 예를 들어 게시판 좋아요나 댓글 알림 등의 추가적인 알림 기능을 확장하는 방향으로 개선할 필요성을 느꼈고, 이를 고려한 고도화를 계획 중입니다.","프론트엔드 팀장으로서, 컨벤션을 문서화하고 팀을 리딩하는 역할을 맡았습니다. 초반에는 팀원들과의 의견 조율이나 프로젝트 진행 상황을 맞추는 데 어려움이 있었지만, 점차 팀원들과 협력이 잘 이루어져 프로젝트의 방향성을 잡고 원활하게 진행할 수 있었습니다."]}],"contributionPercentage":"60%","technicalContributions":["소셜 로그인(구글, 네이버)","사이드바(검색, 친구 및 참여중인 채팅방)","실시간 채팅(웹소켓)","실시간 알림(웹소켓)"]}}]}]}]
c:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
a:null
e:[["$","link","0",{"rel":"icon","href":"/portfolio/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
